name: release

on:
  push:
    tags:
      - 'v*'
    branches:
      - trunk
    paths-ignore:
      - README.md
      - LICENSE
  pull_request:
    branches:
      - trunk
    paths-ignore:
      - README.md
      - LICENSE

jobs:
  context:
    uses: ./.github/workflows/workflow-call-context.yaml
  release:
    needs:
      - context
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.context.outputs.ref }}
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.context.outputs.node-version }}
      - name: install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ needs.context.outputs.pnpm-version }}
          run_install: false
      - name: get pnpm store directory
        id: pnpm-store-path
        run: echo "value=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store-path.outputs.value }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: install dependencies
        run: pnpm install
      - name: typecheck
        run: pnpm run typecheck
      - name: test
        run: pnpm run test
      - name: code coverage
        uses: codecov/codecov-action@v3.1.4
      - name: build
        run: pnpm run build
      - name: release
        if: needs.context.outputs.environment == 'production'
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
          pnpm run release --access public ${{ needs.context.outputs.version }}

          cat << EOF > "$HOME/.npmrc"
            @escapace:registry=https://npm.pkg.github.com/
            //npm.pkg.github.com/:_authToken=$GITHUB_TOKEN
          EOF
          pnpm run release ${{ needs.context.outputs.version }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: github release
        if: needs.context.outputs.environment == 'production'
        run: |
          pnpm exec changelogithub
          # gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
